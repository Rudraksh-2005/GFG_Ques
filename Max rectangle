class Solution {
  public:
    int findmax(vector<int>&histo){
        stack < int > st;
        int maxA = 0;
        int n = histo.size();
        for (int i = 0; i <= n; i++) {
            while (!st.empty() &&  (i==n ||histo[st.top()] >= histo[i])){
            int height = histo[st.top()];
            st.pop();
            int width;
            if (st.empty())
                width = i;
            else
                width = i - st.top() - 1;
            maxA = max(maxA, width * height);
            }
        st.push(i);
      }
      return maxA;
    }
    
    int maxArea(vector<vector<int>> &mat) {
        // code here
        int n=mat.size();
        int m=mat[0].size();
        int maxi=0;
        vector<int>psum(m,0);
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if (mat[i][j] == 0)
                    psum[j] = 0;
                else
                    psum[j] += 1;
            }
            
        
            
            maxi=max(maxi,findmax(psum));
        }
        
        return maxi;
        
    }
};
